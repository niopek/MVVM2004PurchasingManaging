// <auto-generated />
using System;
using MVVM2004PurchasingManaging.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVVM2004PurchasingManaging.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230519064019_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVVM2004PurchasingManaging.Entities.Indeks", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Tc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Indekses");
                });

            modelBuilder.Entity("MVVM2004PurchasingManaging.Entities.IndeksPriceRecord", b =>
                {
                    b.Property<int>("IndeksId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IndeksId", "SupplierId", "PlantId");

                    b.HasIndex("PlantId");

                    b.HasIndex("SupplierId");

                    b.ToTable("IndeksPriceRecords");
                });

            modelBuilder.Entity("MVVM2004PurchasingManaging.Entities.OrderPriceRecord", b =>
                {
                    b.Property<int>("OrderPriceRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderPriceRecordId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IndeksId")
                        .HasColumnType("int");

                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("OrderPriceRecordId");

                    b.HasIndex("IndeksId", "SupplierId", "PlantId");

                    b.ToTable("OrderPriceRecords");
                });

            modelBuilder.Entity("MVVM2004PurchasingManaging.Entities.OrderRecord", b =>
                {
                    b.Property<int>("OrderRecordId")
                        .HasColumnType("int");

                    b.HasKey("OrderRecordId");

                    b.ToTable("OrderRecords");
                });

            modelBuilder.Entity("MVVM2004PurchasingManaging.Entities.Plant", b =>
                {
                    b.Property<int>("PlantId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("PlantId");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("MVVM2004PurchasingManaging.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("MVVM2004PurchasingManaging.Entities.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("OrderPriceRecordOrderRecord", b =>
                {
                    b.Property<int>("OrderPriceRecordsOrderPriceRecordId")
                        .HasColumnType("int");

                    b.Property<int>("OrderRecordsOrderRecordId")
                        .HasColumnType("int");

                    b.HasKey("OrderPriceRecordsOrderPriceRecordId", "OrderRecordsOrderRecordId");

                    b.HasIndex("OrderRecordsOrderRecordId");

                    b.ToTable("OrderPriceRecordOrderRecord");
                });

            modelBuilder.Entity("MVVM2004PurchasingManaging.Entities.IndeksPriceRecord", b =>
                {
                    b.HasOne("MVVM2004PurchasingManaging.Entities.Indeks", "Indeks")
                        .WithMany("IndeksPriceRecords")
                        .HasForeignKey("IndeksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVVM2004PurchasingManaging.Entities.Plant", "Plant")
                        .WithMany("IndeksPriceRecords")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVVM2004PurchasingManaging.Entities.Supplier", "Supplier")
                        .WithMany("IndeksPriceRecords")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Indeks");

                    b.Navigation("Plant");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("MVVM2004PurchasingManaging.Entities.OrderPriceRecord", b =>
                {
                    b.HasOne("MVVM2004PurchasingManaging.Entities.IndeksPriceRecord", "IndeksPriceRecord")
                        .WithMany()
                        .HasForeignKey("IndeksId", "SupplierId", "PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IndeksPriceRecord");
                });

            modelBuilder.Entity("OrderPriceRecordOrderRecord", b =>
                {
                    b.HasOne("MVVM2004PurchasingManaging.Entities.OrderPriceRecord", null)
                        .WithMany()
                        .HasForeignKey("OrderPriceRecordsOrderPriceRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVVM2004PurchasingManaging.Entities.OrderRecord", null)
                        .WithMany()
                        .HasForeignKey("OrderRecordsOrderRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MVVM2004PurchasingManaging.Entities.Indeks", b =>
                {
                    b.Navigation("IndeksPriceRecords");
                });

            modelBuilder.Entity("MVVM2004PurchasingManaging.Entities.Plant", b =>
                {
                    b.Navigation("IndeksPriceRecords");
                });

            modelBuilder.Entity("MVVM2004PurchasingManaging.Entities.Supplier", b =>
                {
                    b.Navigation("IndeksPriceRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
